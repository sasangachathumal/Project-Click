/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.Item;

import biz.project.cms.controller.CategoryController;
import biz.project.cms.controller.ItemController;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.Category;
import biz.project.cms.model.Item;
import biz.project.cms.other.IdGenerator;
import biz.project.cms.other.Validation;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Dilhan Mendis
 */
public class AddItem extends javax.swing.JDialog {

    private final StringWriter sw;

    /**
     * Creates new form AddItem
     *
     * @param parent
     * @param modal
     */
    public AddItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sw = new StringWriter();
        //
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", Color.white);
        UI.put("Panel.background", Color.white);
        //
        setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
        try {
            getAllCategory();
            txtItemCode.setText(getID());
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
        txtItemSerial.requestFocus();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMain = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        txtItemSerial = new javax.swing.JTextField();
        cmbItemCategory = new javax.swing.JComboBox<String>();
        txtItemRol = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        btnAddItem = new javax.swing.JButton();
        txtItemDescription = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Item");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        panelMain.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Description :");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Code       :");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Barcode      :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Category      :");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("ROL     :");

        txtItemCode.setEditable(false);
        txtItemCode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtItemCode.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtItemSerial.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtItemSerial.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtItemSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemSerialActionPerformed(evt);
            }
        });

        cmbItemCategory.setEditable(true);
        cmbItemCategory.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        cmbItemCategory.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cmbItemCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemCategoryActionPerformed(evt);
            }
        });

        txtItemRol.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtItemRol.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtItemRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemRolActionPerformed(evt);
            }
        });
        txtItemRol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemRolKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtItemRolKeyTyped(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 153, 153));
        jButton3.setText("+");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnAddItem.setBackground(new java.awt.Color(255, 255, 255));
        btnAddItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAddItem.setText("Add");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        txtItemDescription.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtItemDescription.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtItemDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemDescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(20, 20, 20)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtItemRol, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(cmbItemCategory, 0, 162, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMainLayout.createSequentialGroup()
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtItemSerial, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtItemDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                        .addGap(1, 1, 1)))
                .addGap(7, 7, 7))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMainLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbItemCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemRol, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddItem)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        addCategory();
    }//GEN-LAST:event_jButton3MouseClicked

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        inputItem();
        try {
            txtItemCode.setText(getID());
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtItemSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemSerialActionPerformed
        if (!txtItemSerial.getText().isEmpty()) {
            txtItemDescription.requestFocus();
        }
    }//GEN-LAST:event_txtItemSerialActionPerformed

    private void txtItemDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemDescriptionActionPerformed
        if (!txtItemDescription.getText().isEmpty()) {
            cmbItemCategory.requestFocus();
        }
    }//GEN-LAST:event_txtItemDescriptionActionPerformed

    private void cmbItemCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemCategoryActionPerformed
        txtItemRol.requestFocus();
    }//GEN-LAST:event_cmbItemCategoryActionPerformed

    private void txtItemRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemRolActionPerformed
        if (!txtItemRol.getText().isEmpty()) {
            btnAddItem.doClick();
        }
    }//GEN-LAST:event_txtItemRolActionPerformed

    private void txtItemRolKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemRolKeyReleased
        Validation.limitesIntegers(txtItemRol, 4);
    }//GEN-LAST:event_txtItemRolKeyReleased

    private void txtItemRolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemRolKeyTyped
        Validation.limitesIntegers(txtItemRol, 4);
    }//GEN-LAST:event_txtItemRolKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddItem dialog = new AddItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JComboBox<String> cmbItemCategory;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel panelMain;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemDescription;
    private javax.swing.JTextField txtItemRol;
    private javax.swing.JTextField txtItemSerial;
    // End of variables declaration//GEN-END:variables

    private void getAllCategory() throws ClassNotFoundException, SQLException {
        ArrayList<Category> allCategory = CategoryController.getAllCategory();
        cmbItemCategory.removeAllItems();
        if (allCategory != null) {
            for (Category category : allCategory) {
                cmbItemCategory.addItem(category.getName());
            }
        }
    }

    private void inputItem() {
        if (!txtItemCode.getText().isEmpty() && !txtItemDescription.getText().isEmpty()
                && !txtItemRol.getText().isEmpty() && !txtItemSerial.getText().isEmpty()) {
            try {
                String code = txtItemCode.getText();
                String serial = txtItemSerial.getText();
                String description = txtItemDescription.getText();
                String categoryname = String.valueOf(cmbItemCategory.getSelectedItem());
                int categorycode = 0;
                int rol = Integer.parseInt(txtItemRol.getText());

                Category searchCategoryByName = CategoryController.searchCategoryByName(categoryname);
                if (searchCategoryByName != null) {
                    categorycode = searchCategoryByName.getCatID();
                    Item item = new Item(code, serial, description.toUpperCase(), categorycode, rol);
                    int isAddItem = ItemController.addItem(item);

                    if (isAddItem > 0) {
                        JOptionPane.showMessageDialog(this, "Item Successfully Insert !!!!");
                        try {
                            txtItemCode.setText(getID());
                        } catch (SQLException | ClassNotFoundException ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            ex.printStackTrace(new PrintWriter(sw));
                            String trace = sw.toString();
                            LoggerFileAcceess.exceptionLogger(trace);
                        }
                        txtItemCode.setText("");
                        txtItemDescription.setText("");
                        txtItemRol.setText("");
                        txtItemSerial.setText("");
                        cmbItemCategory.setSelectedIndex(0);
                        txtItemSerial.requestFocus();
                    } else {
                        JOptionPane.showMessageDialog(this, "Item Insert Fail !!!!" + "\n" + "Plese Try Again !!!");
                    }
                }

            } catch (NumberFormatException | ClassNotFoundException | SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please all the fields");
        }

    }

    private void addCategory() {
        try {
            String input = JOptionPane.showInputDialog(this, "Enter Category Name", "Input New Category");
            Category category = new Category();
            category.setName(input);
            int addCategory = CategoryController.addCategory(category);
            if (addCategory > 0) {
                System.out.println("Success - category");
            } else {
                JOptionPane.showMessageDialog(this, "Category Insert Fail !!!!" + "\n" + "Plese Try Again !!!");
            }
            getAllCategory();
        } catch (ClassNotFoundException | SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
    }

    private String getID() throws SQLException, ClassNotFoundException {
        return IdGenerator.getNewItemId();
    }
}
