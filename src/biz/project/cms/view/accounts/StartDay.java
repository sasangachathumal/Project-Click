/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.accounts;

import biz.project.cms.controller.AccountsController;
import biz.project.cms.fileaccess.AccountDaysCloseOrNotFileAccess;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.Accounts;
import biz.project.cms.model.User;
import biz.project.cms.other.Validation;
import biz.project.cms.view.main.HomeFrame;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Zandeepa PC
 */
public class StartDay extends javax.swing.JDialog {

    private final User userId;
    private AccountDaysCloseOrNotFileAccess access = null;

    /**
     * Creates new form StartDay
     */
    public StartDay(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", Color.white);
        UI.put("Panel.background", Color.white);
        //
        txtPettyCashToDayAmount.requestFocus();
        userId = HomeFrame.user;
        setLocationRelativeTo(parent);
        setTitle("Accounts");
        access = new AccountDaysCloseOrNotFileAccess();
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtDrawerCashToDayAmount = new javax.swing.JTextField();
        txtPettyCashToDayAmount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Start Day");
        setResizable(false);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Today Petty Cash Amount : ");

        txtDrawerCashToDayAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDrawerCashToDayAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtDrawerCashToDayAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrawerCashToDayAmountActionPerformed(evt);
            }
        });
        txtDrawerCashToDayAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDrawerCashToDayAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDrawerCashToDayAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDrawerCashToDayAmountKeyTyped(evt);
            }
        });

        txtPettyCashToDayAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPettyCashToDayAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPettyCashToDayAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPettyCashToDayAmountActionPerformed(evt);
            }
        });
        txtPettyCashToDayAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPettyCashToDayAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPettyCashToDayAmountKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Today Drawer Cash Amount : ");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons/Accounts.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel2.setText("Start Account Day");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(258, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDrawerCashToDayAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(txtPettyCashToDayAmount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDrawerCashToDayAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPettyCashToDayAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDrawerCashToDayAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrawerCashToDayAmountActionPerformed
        txtPettyCashToDayAmount.requestFocus();
    }//GEN-LAST:event_txtDrawerCashToDayAmountActionPerformed

    private void txtPettyCashToDayAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPettyCashToDayAmountActionPerformed
        startDay();
    }//GEN-LAST:event_txtPettyCashToDayAmountActionPerformed

    private void txtDrawerCashToDayAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDrawerCashToDayAmountKeyReleased
        Validation.priceText(txtDrawerCashToDayAmount);
    }//GEN-LAST:event_txtDrawerCashToDayAmountKeyReleased

    private void txtDrawerCashToDayAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDrawerCashToDayAmountKeyTyped
        Validation.priceText(txtDrawerCashToDayAmount);
    }//GEN-LAST:event_txtDrawerCashToDayAmountKeyTyped

    private void txtPettyCashToDayAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPettyCashToDayAmountKeyReleased
        Validation.priceText(txtPettyCashToDayAmount);
    }//GEN-LAST:event_txtPettyCashToDayAmountKeyReleased

    private void txtPettyCashToDayAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPettyCashToDayAmountKeyTyped
        Validation.priceText(txtPettyCashToDayAmount);
    }//GEN-LAST:event_txtPettyCashToDayAmountKeyTyped

    private void txtDrawerCashToDayAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDrawerCashToDayAmountKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }//GEN-LAST:event_txtDrawerCashToDayAmountKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartDay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartDay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartDay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartDay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StartDay dialog = new StartDay(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField txtDrawerCashToDayAmount;
    private javax.swing.JTextField txtPettyCashToDayAmount;
    // End of variables declaration//GEN-END:variables

    private String getDate() {
        Date date = new Date();
        SimpleDateFormat format = new SimpleDateFormat("YYYY-MM-dd");
        return format.format(date);
    }

    private void startDay() {
        if (!txtPettyCashToDayAmount.getText().equals("") && !txtDrawerCashToDayAmount.getText().equals("")) {
            try {
                boolean addCloseAccount = access.addCloseAccount(getDate(), 0);
                if (addCloseAccount) {
                    Accounts pettyCashAccounts = new Accounts(0, userId.getUid(), null, null, 1, "Add(Day Start)", Double.parseDouble(txtPettyCashToDayAmount.getText()));
                    Accounts drawerCashAccounts = new Accounts(0, userId.getUid(), null, null, 2, "Add(Day Start)", Double.parseDouble(txtDrawerCashToDayAmount.getText()));
                    int addAccount = AccountsController.addAccount(pettyCashAccounts);
                    if (addAccount > 0) {
                        int addAccount1 = AccountsController.addAccount(drawerCashAccounts);
                        if (addAccount1 > 0) {
                            JOptionPane.showMessageDialog(this, "Day Successfully Started !!!", "Message", 1);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Day Start Fail !!!\nPlease Try Again !!!", "Message", 2);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Day Start Fail !!!\nPlease Try Again !!!", "Message", 2);
                    }
                }
            } catch (SQLException | ClassNotFoundException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            } catch (IOException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }
}
