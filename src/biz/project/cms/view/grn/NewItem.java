/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.grn;

import biz.project.cms.controller.CategoryController;
import biz.project.cms.controller.ItemController;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.Category;
import biz.project.cms.model.Item;
import biz.project.cms.other.IdGenerator;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Amila(Polta)
 */
public class NewItem extends javax.swing.JDialog {

    private String itemName;
    private final StringWriter sw;

    /**
     * Creates new form NewItem 
     */
    public NewItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.sw = new StringWriter();
        initComponents();
        txtBarcode.requestFocus();
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
        fillCategory();
        newItemCode();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNewItemCode = new javax.swing.JLabel();
        txtNewCode = new javax.swing.JTextField();
        txtBarcode = new javax.swing.JTextField();
        lblNewItemBarcode = new javax.swing.JLabel();
        lblNewItemDescription = new javax.swing.JLabel();
        txtNewDesc = new javax.swing.JTextField();
        cmbCategory = new javax.swing.JComboBox<>();
        lblNewItemBarcode1 = new javax.swing.JLabel();
        btnAddNewItem = new javax.swing.JButton();
        txtROL = new javax.swing.JTextField();
        lblROL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Item");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblNewItemCode.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNewItemCode.setText("Code :");

        txtNewCode.setEditable(false);
        txtNewCode.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtNewCode.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNewCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewCodeActionPerformed(evt);
            }
        });

        txtBarcode.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtBarcode.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarcodeActionPerformed(evt);
            }
        });
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyPressed(evt);
            }
        });

        lblNewItemBarcode.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNewItemBarcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNewItemBarcode.setText("Barcode :");

        lblNewItemDescription.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNewItemDescription.setText("Decs. :");

        txtNewDesc.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtNewDesc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtNewDesc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNewDescFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNewDescFocusLost(evt);
            }
        });
        txtNewDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewDescActionPerformed(evt);
            }
        });
        txtNewDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewDescKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewDescKeyReleased(evt);
            }
        });

        cmbCategory.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        cmbCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbCategoryKeyPressed(evt);
            }
        });

        lblNewItemBarcode1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblNewItemBarcode1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNewItemBarcode1.setText("Cat. :");

        btnAddNewItem.setBackground(new java.awt.Color(255, 255, 255));
        btnAddNewItem.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnAddNewItem.setText("+");
        btnAddNewItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewItemActionPerformed(evt);
            }
        });

        txtROL.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtROL.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtROL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtROLFocusGained(evt);
            }
        });
        txtROL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtROLActionPerformed(evt);
            }
        });
        txtROL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtROLKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtROLKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtROLKeyTyped(evt);
            }
        });

        lblROL.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblROL.setText("ROL :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblNewItemCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNewCode))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNewItemBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBarcode))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblNewItemDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNewDesc))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNewItemBarcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCategory, 0, 105, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewItem))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lblROL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtROL)
                        .addGap(66, 66, 66)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewItemCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewItemBarcode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNewItemDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNewItemBarcode1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAddNewItem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtROL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblROL))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNewCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewCodeActionPerformed

    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarcodeActionPerformed


    }//GEN-LAST:event_txtBarcodeActionPerformed

    private void txtROLFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtROLFocusGained

    }//GEN-LAST:event_txtROLFocusGained

    private void txtROLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtROLActionPerformed


    }//GEN-LAST:event_txtROLActionPerformed

    private void txtROLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtROLKeyReleased

    }//GEN-LAST:event_txtROLKeyReleased

    private void txtROLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtROLKeyTyped

    }//GEN-LAST:event_txtROLKeyTyped

    private void txtNewDescFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewDescFocusGained

    }//GEN-LAST:event_txtNewDescFocusGained

    private void txtNewDescFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNewDescFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewDescFocusLost

    private void txtNewDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewDescActionPerformed


    }//GEN-LAST:event_txtNewDescActionPerformed

    private void txtNewDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewDescKeyReleased

    }//GEN-LAST:event_txtNewDescKeyReleased

    private void btnAddNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewItemActionPerformed
        String category = JOptionPane.showInputDialog(this, "Category Name", "New Category", 1);
        if (category != null && !category.equals("")) {
            try {
                int add = CategoryController.addCategory(new Category(0, category));
                if (add > 0) {
                    fillCategory();
                    JOptionPane.showMessageDialog(this, "Category Added");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }//GEN-LAST:event_btnAddNewItemActionPerformed

    private void txtBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNewDesc.requestFocus();
        } else {
            setKeyEvent(evt);
        }
    }//GEN-LAST:event_txtBarcodeKeyPressed

    private void txtNewDescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewDescKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cmbCategory.requestFocus();
        } else {
            setKeyEvent(evt);
        }
    }//GEN-LAST:event_txtNewDescKeyPressed

    private void txtROLKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtROLKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveItem();
        } else {
            setKeyEvent(evt);
        }
    }//GEN-LAST:event_txtROLKeyPressed

    private void cmbCategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbCategoryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtROL.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F7) {
            btnAddNewItem.doClick();

        }
    }//GEN-LAST:event_cmbCategoryKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewItem dialog = new NewItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewItem;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblNewItemBarcode;
    private javax.swing.JLabel lblNewItemBarcode1;
    private javax.swing.JLabel lblNewItemCode;
    private javax.swing.JLabel lblNewItemDescription;
    private javax.swing.JLabel lblROL;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtNewCode;
    private javax.swing.JTextField txtNewDesc;
    private javax.swing.JTextField txtROL;
    // End of variables declaration//GEN-END:variables

    /**
     * @param itemName the itemName to set
     */
    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

    private void setKeyEvent(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
    }

    private void fillCategory() {
        try {
            ArrayList<Category> allCategory = CategoryController.getAllCategory();
            if (!allCategory.isEmpty()) {
                cmbCategory.removeAllItems();
                for (Category category : allCategory) {
                    cmbCategory.addItem(category.getName());
                    //System.out.println("AAA"+category.getName());
                }
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());

            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
    }

    private String newItemCode() {
        String s = null;
        try {

            s = IdGenerator.getNewItemId();
            txtNewCode.setText(s);

        } catch (SQLException ex) {
            Logger.getLogger(NewItem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;

    }

    private void saveItem() {
        if (txtNewDesc.getText().isEmpty()) {
            txtNewDesc.setBackground(new Color(255, 125, 100));
            txtNewDesc.requestFocus();
        } else if (txtROL.getText().isEmpty()) {
            txtROL.setBackground(new Color(255, 125, 100));
            txtROL.requestFocus();
        } else if (cmbCategory.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Select a category");
        } else {
            try {
                newItemCode();
                Category cat = CategoryController.searchCategoryByName(cmbCategory.getSelectedItem().toString());
                if (cat != null) {
                    String barcode = txtBarcode.getText();
                    int rol = Integer.valueOf(txtROL.getText());
                    if (barcode.equals("")) {
                        barcode = null;
                    }
                    int addItem = ItemController.addItem(new Item(txtNewCode.getText(), barcode, txtNewDesc.getText().toUpperCase(), cat.getCatID(), rol));
                    if (addItem > 0) {
                        JOptionPane.showMessageDialog(this, "Item Added");
                        //fillComboItem();
                        
                        int i = JOptionPane.showConfirmDialog(this, "Add to the GRN");
                        if (i == 0) {
                            ArrayList<Object> list = new ArrayList<>();
                            list.add(txtNewCode.getText());
                            list.add(txtNewDesc.getText());
                            ItemInfo itemInfo = new ItemInfo(null, true, list);
                            itemInfo.setVisible(true);
                        }
//                        txtBarcode.setText("");
//                        txtNewDesc.setText("");
//                        txtROL.setText("");
                        this.dispose();

                    } else {
                        JOptionPane.showMessageDialog(this, "Add item fail!");
                    }
                }
            } catch (ClassNotFoundException | SQLException | NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }

}
