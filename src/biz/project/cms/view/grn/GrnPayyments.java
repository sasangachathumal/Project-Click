/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.grn;

import biz.project.cms.controller.AccountsController;
import biz.project.cms.controller.BatchController;
import biz.project.cms.controller.DealerSerialController;
import biz.project.cms.controller.GrnController;
import biz.project.cms.controller.GrnDetailController;
import biz.project.cms.controller.ItemController;
import biz.project.cms.controller.MyChequeController;
import biz.project.cms.controller.MyPaymentController;
import biz.project.cms.controller.SupplierController;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.Accounts;
import biz.project.cms.model.Batch;
import biz.project.cms.model.DealerSerial;
import biz.project.cms.model.GRN;
import biz.project.cms.model.GRNDetail;
import biz.project.cms.model.Item;
import biz.project.cms.model.MyCheque;
import biz.project.cms.model.MyPayment;
import biz.project.cms.model.Supplier;
import biz.project.cms.other.Validation;
import biz.project.cms.view.main.HomeFrame;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;

/**
 *
 * @author Vihanga
 */
public class GrnPayyments extends javax.swing.JDialog {

    private final DefaultTableModel dtm, dtmGRN;
    private String grnid;
    private boolean state;

    /**
     * Creates new form GrnPayyments
     */
    public GrnPayyments(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", Color.white);
        UI.put("Panel.background", Color.white);
        //
        state = true;
        Color white = new Color(255, 255, 255);
        tableGRN.setOpaque(true);
        tableGRN.setFillsViewportHeight(true);
        tableGRN.setBackground(white);
        tableItem.setOpaque(true);
        tableItem.setFillsViewportHeight(true);
        tableItem.setBackground(white);
        dtm = (DefaultTableModel) tableItem.getModel();
        dtmGRN = (DefaultTableModel) tableGRN.getModel();
        setGRNTable();
        fillComboSupplier();
        setLocationRelativeTo(parent);
        setTitle("Add Payment");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGRN = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItem = new javax.swing.JTable();
        txtGrnId2 = new javax.swing.JTextField();
        lblGrnId2 = new javax.swing.JLabel();
        lblSupplier2 = new javax.swing.JLabel();
        comboSupplier2 = new javax.swing.JComboBox<String>();
        lblDate2 = new javax.swing.JLabel();
        pickDate = new org.jdesktop.swingx.JXDatePicker();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPay = new javax.swing.JList();
        lblSupplier3 = new javax.swing.JLabel();
        txtTtal = new javax.swing.JTextField();
        lblSupplier4 = new javax.swing.JLabel();
        txtPayed = new javax.swing.JTextField();
        lblSupplier5 = new javax.swing.JLabel();
        txtDue = new javax.swing.JTextField();
        panelTab2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        lblOrderID20 = new javax.swing.JLabel();
        txtCash2 = new javax.swing.JTextField();
        lblOrderID21 = new javax.swing.JLabel();
        txtBalance2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        txtChqNo3 = new javax.swing.JTextField();
        lblOrderID22 = new javax.swing.JLabel();
        lblOrderID23 = new javax.swing.JLabel();
        combo2 = new javax.swing.JComboBox();
        txtAmount2 = new javax.swing.JTextField();
        lblOrderID24 = new javax.swing.JLabel();
        btnChqPay2 = new javax.swing.JButton();
        lblOrderID26 = new javax.swing.JLabel();
        lblIfPay = new javax.swing.JLabel();
        picDate = new org.jdesktop.swingx.JXDatePicker();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableGRN.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tableGRN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GRN ID", "Supplier", "Date", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableGRN.setRowHeight(22);
        tableGRN.setSelectionBackground(new java.awt.Color(0, 153, 102));
        tableGRN.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableGRN.getTableHeader().setReorderingAllowed(false);
        tableGRN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableGRNMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tableGRN);
        if (tableGRN.getColumnModel().getColumnCount() > 0) {
            tableGRN.getColumnModel().getColumn(0).setResizable(false);
            tableGRN.getColumnModel().getColumn(1).setResizable(false);
            tableGRN.getColumnModel().getColumn(2).setResizable(false);
            tableGRN.getColumnModel().getColumn(3).setResizable(false);
            tableGRN.getColumnModel().getColumn(3).setPreferredWidth(0);
        }

        tableItem.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GDID", "Code", "Description", "Warranty", "Cost Price", "Qty", "Amount", "#"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItem.setRowHeight(22);
        tableItem.setSelectionBackground(new java.awt.Color(0, 153, 102));
        tableItem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableItem.getTableHeader().setReorderingAllowed(false);
        tableItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tableItemFocusLost(evt);
            }
        });
        tableItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableItemMouseReleased(evt);
            }
        });
        tableItem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableItemPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tableItem);
        if (tableItem.getColumnModel().getColumnCount() > 0) {
            tableItem.getColumnModel().getColumn(7).setMinWidth(0);
            tableItem.getColumnModel().getColumn(7).setPreferredWidth(0);
            tableItem.getColumnModel().getColumn(7).setMaxWidth(0);
        }

        txtGrnId2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtGrnId2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtGrnId2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrnId2ActionPerformed(evt);
            }
        });
        txtGrnId2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGrnId2KeyReleased(evt);
            }
        });

        lblGrnId2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblGrnId2.setText("GRN ID:");

        lblSupplier2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSupplier2.setText("Supplier :");

        comboSupplier2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        comboSupplier2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboSupplier2ItemStateChanged(evt);
            }
        });
        comboSupplier2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                comboSupplier2MouseReleased(evt);
            }
        });
        comboSupplier2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSupplier2ActionPerformed(evt);
            }
        });

        lblDate2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblDate2.setText("Date :");

        jPanel2.setBackground(new java.awt.Color(255, 252, 252));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Payments", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(102, 153, 255))); // NOI18N

        listPay.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(listPay);

        lblSupplier3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSupplier3.setText("Total");

        txtTtal.setEditable(false);
        txtTtal.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        txtTtal.setForeground(new java.awt.Color(0, 52, 79));
        txtTtal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTtal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblSupplier4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSupplier4.setText("Payed");

        txtPayed.setEditable(false);
        txtPayed.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        txtPayed.setForeground(new java.awt.Color(0, 70, 70));
        txtPayed.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPayed.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblSupplier5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSupplier5.setText("Due");

        txtDue.setEditable(false);
        txtDue.setFont(new java.awt.Font("sansserif", 1, 17)); // NOI18N
        txtDue.setForeground(new java.awt.Color(0, 51, 51));
        txtDue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDue.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelTab2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        panelTab2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        lblOrderID20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID20.setText("Cash");

        txtCash2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCash2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCash2.setCaretColor(new java.awt.Color(116, 7, 7));
        txtCash2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCash2ActionPerformed(evt);
            }
        });
        txtCash2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCash2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCash2KeyTyped(evt);
            }
        });

        lblOrderID21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID21.setText("Balance");

        txtBalance2.setEditable(false);
        txtBalance2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBalance2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtBalance2.setCaretColor(new java.awt.Color(116, 7, 7));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(lblOrderID20, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCash2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(lblOrderID21, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBalance2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCash2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID20, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBalance2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID21, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(73, 73, 73)
                .addComponent(jButton3)
                .addGap(53, 53, 53))
        );

        panelTab2.addTab("<html>C<br>A<br>S<br>H</html>", jPanel7);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        txtChqNo3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtChqNo3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtChqNo3.setCaretColor(new java.awt.Color(116, 7, 7));
        txtChqNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChqNo3ActionPerformed(evt);
            }
        });
        txtChqNo3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChqNo3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChqNo3KeyTyped(evt);
            }
        });

        lblOrderID22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID22.setText("Chq. No.");

        lblOrderID23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID23.setText("Date");

        combo2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sampath Bank", "Commercial Bank", "Nation's Trust Bank", "BOC", "People's Bank", "DFCC Bank", "Pan Asia Bank", "Seylan Bank", "Other" }));
        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });
        combo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo2KeyPressed(evt);
            }
        });

        txtAmount2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAmount2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtAmount2.setCaretColor(new java.awt.Color(116, 7, 7));
        txtAmount2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmount2ActionPerformed(evt);
            }
        });
        txtAmount2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmount2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmount2KeyTyped(evt);
            }
        });

        lblOrderID24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID24.setText("Bank");

        btnChqPay2.setBackground(new java.awt.Color(255, 255, 255));
        btnChqPay2.setText("Save");
        btnChqPay2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChqPay2ActionPerformed(evt);
            }
        });

        lblOrderID26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID26.setText("Amount");

        lblIfPay.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblIfPay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        picDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(lblOrderID24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lblOrderID22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblOrderID23, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblOrderID26, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtChqNo3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(picDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAmount2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblIfPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnChqPay2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(lblIfPay, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChqNo3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID22, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(picDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID24, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChqPay2)
                .addGap(63, 63, 63))
        );

        panelTab2.addTab("<html>C<br>H<br>E<br>Q<br>U<br>E</html>", jPanel8);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSupplier3)
                    .addComponent(lblSupplier4)
                    .addComponent(lblSupplier5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPayed)
                    .addComponent(txtTtal)
                    .addComponent(txtDue)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTab2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelTab2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSupplier3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTtal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSupplier4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPayed, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSupplier5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDue, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton2.setFont(new java.awt.Font("sansserif", 0, 13)); // NOI18N
        jButton2.setText("Print");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblGrnId2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtGrnId2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(lblSupplier2)
                        .addGap(18, 18, 18)
                        .addComponent(comboSupplier2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(lblDate2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pickDate, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtGrnId2)
                    .addComponent(lblGrnId2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSupplier2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboSupplier2)
                        .addComponent(lblDate2)
                        .addComponent(pickDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableGRNMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGRNMouseReleased
        if (tableGRN.getSelectedRow() != -1) {
            state = false;
            txtGrnId2.setText(dtmGRN.getValueAt(tableGRN.getSelectedRow(), 0).toString());
            grnid = txtGrnId2.getText();
            dtm.setRowCount(0);
            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Date date;
            try {
                date = format.parse(dtmGRN.getValueAt(tableGRN.getSelectedRow(), 2).toString());
                pickDate.setDate(date);
            } catch (ParseException ex) {
                Logger.getLogger(UpdateGRN.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (int i = 0; i < comboSupplier2.getItemCount(); i++) {
                if (comboSupplier2.getItemAt(i).equals(dtmGRN.getValueAt(tableGRN.getSelectedRow(), 1).toString())) {
                    comboSupplier2.setSelectedIndex(i);
                    break;
                }
            }
            txtDue.setForeground(Color.BLACK);
            try {
                ArrayList<GRNDetail> details = GrnDetailController.getAllOrderDetails(grnid);
                if (!details.isEmpty()) {
                    int i = -1;
                    int j = 1;
                    for (GRNDetail detail : details) {
                        Batch batch = BatchController.searchBatch(detail.getBatchId());
                        if (batch != null) {
                            Item item = ItemController.searchIstemByCode(batch.getItemCode());
                            if (item != null) {
                                Object o[] = {detail.getGrnDetailId(), batch.getItemCode(),
                                    item.getDesciption(), false, batch.getCostPrice(), detail.getQty(),
                                    batch.getCostPrice() * detail.getQty(), j++};
                                dtm.addRow(o);
                                i++;
                            }
                        }
                        ArrayList<DealerSerial> dsl = DealerSerialController.searchDserialGRNDID(detail.getGrnDetailId() + "");
                        if (!dsl.isEmpty()) {
                            dtm.setValueAt(true, i, 3);
                        }
                    }
                    setPayments();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }//GEN-LAST:event_tableGRNMouseReleased

    private void setPayments() throws NumberFormatException, ClassNotFoundException, SQLException {
        txtTtal.setText(dtmGRN.getValueAt(tableGRN.getSelectedRow(), 3).toString());
        ArrayList<MyPayment> myPay = MyPaymentController.searchMyPaymentByGRNId(grnid);
        double payed = 0.0;
        if (myPay != null) {
            DefaultListModel listModel = new DefaultListModel();
            listModel.clear();
            listPay.setModel(listModel);
            for (MyPayment pay : myPay) {
                listModel.addElement(pay.getDate() + "         Rs." + pay.getAmount());
                payed += pay.getAmount();
            }
        }
        txtPayed.setText(payed + "");
        if (!txtTtal.getText().isEmpty() && !txtPayed.getText().isEmpty()) {
            txtDue.setText(Double.parseDouble(txtTtal.getText()) - Double.valueOf(txtPayed.getText()) + "");
            if (Double.parseDouble(txtTtal.getText()) - Double.valueOf(txtPayed.getText()) > 0.0) {
                txtDue.setForeground(new Color(200, 65, 65));
            }
        }
        txtCash2.setText("");
        txtBalance2.setText("");
        txtAmount2.setText("");
        txtChqNo3.setText("");
    }

    private void tableItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tableItemFocusLost

    }//GEN-LAST:event_tableItemFocusLost

    private void tableItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemMouseReleased

    }//GEN-LAST:event_tableItemMouseReleased

    private void tableItemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tableItemPropertyChange

    }//GEN-LAST:event_tableItemPropertyChange

    private void txtGrnId2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrnId2ActionPerformed
        if (txtGrnId2.getText().isEmpty()) {
            Toolkit.getDefaultToolkit().beep();
            txtGrnId2.setBackground(new Color(255, 115, 115));
            dtm.setRowCount(0);
        } else {
            try {
                GRN grn = GrnController.searchGRNById(txtGrnId2.getText());
                if (grn != null) {
                    state = false;
                    grnid = grn.getGrnId();
                    dtm.setRowCount(0);
                    DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                    Date date;
                    try {
                        date = format.parse(grn.getDate());
                        pickDate.setDate(date);
                    } catch (ParseException ex) {
                        Logger.getLogger(UpdateGRN.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Supplier sup = SupplierController.searchSupplierBYID(grn.getSupId());
                    for (int i = 0; i < comboSupplier2.getItemCount(); i++) {
                        if (comboSupplier2.getItemAt(i).equals(sup.getCompany())) {
                            comboSupplier2.setSelectedIndex(i);
                            break;
                        }
                    }
                    ArrayList<GRNDetail> details = GrnDetailController.getAllOrderDetails(grnid);
                    if (!details.isEmpty()) {
                        int i = -1;
                        int j = 1;
                        for (GRNDetail detail : details) {
                            Batch batch = BatchController.searchBatch(detail.getBatchId());
                            if (batch != null) {
                                Item item = ItemController.searchIstemByCode(batch.getItemCode());
                                if (item != null) {
                                    Object o[] = {detail.getGrnDetailId(), batch.getItemCode(),
                                        item.getDesciption(), false, batch.getCostPrice(), detail.getQty(),
                                        batch.getCostPrice() * detail.getQty(), j++};
                                    dtm.addRow(o);
                                    i++;
                                }
                            }
                            ArrayList<DealerSerial> dsl = DealerSerialController.searchDserialGRNDID(detail.getGrnDetailId() + "");
                            if (!dsl.isEmpty()) {
                                dtm.setValueAt(true, i, 3);
                            }
                        }
                    }

                } else {
                    Toolkit.getDefaultToolkit().beep();
                    txtGrnId2.setBackground(new Color(255, 115, 115));
                    dtm.setRowCount(0);
                    txtGrnId2.selectAll();
                }
            } catch (ClassNotFoundException | SQLException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }//GEN-LAST:event_txtGrnId2ActionPerformed

    private void txtGrnId2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGrnId2KeyReleased
        txtGrnId2.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtGrnId2KeyReleased

    private void comboSupplier2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboSupplier2ItemStateChanged
        if (state) {
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                if (comboSupplier2.getSelectedIndex() != -1) {
                    if (comboSupplier2.getSelectedIndex() == 0) {
                        setGRNTable();
                        dtm.setRowCount(0);
                    } else {
                        try {
                            Supplier supplier = SupplierController.searchSupplier(comboSupplier2.getSelectedItem().toString());
                            if (supplier != null) {
                                ArrayList<GRN> grns = GrnController.getAllGRNBySID(supplier.getSupId() + "", getSelectedDate());
                                if (!grns.isEmpty()) {
                                    dtm.setRowCount(0);
                                    dtmGRN.setRowCount(0);
                                    for (GRN grn : grns) {
                                        Object[] o = {grn.getGrnId(), supplier.getCompany(), grn.getDate(), grn.getAmount()};
                                        dtmGRN.addRow(o);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "No GRN found for " + comboSupplier2.getSelectedItem().toString() + " on " + getSelectedDate());
                                    comboSupplier2.setSelectedIndex(0);
                                }
                            }
                        } catch (ClassNotFoundException | SQLException ex) {
                            StringWriter sw = new StringWriter();
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                            ex.printStackTrace(new PrintWriter(sw));
                            String trace = sw.toString();
                            LoggerFileAcceess.exceptionLogger(trace);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_comboSupplier2ItemStateChanged

    private void comboSupplier2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboSupplier2MouseReleased
        state = true;
    }//GEN-LAST:event_comboSupplier2MouseReleased

    private void comboSupplier2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSupplier2ActionPerformed

    }//GEN-LAST:event_comboSupplier2ActionPerformed

    private void btnChqPay2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChqPay2ActionPerformed
        if (txtChqNo3.getText().isEmpty()) {
            getToolkit().beep();
            txtChqNo3.requestFocus();
        } else if (!validateChqDay()) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "System can only accept chaques dated to today or future !");
        } else if (txtAmount2.getText().isEmpty()) {
            getToolkit().beep();
            txtAmount2.requestFocus();
        } else {
            MyPayment payment = new MyPayment(grnid + 1, getDate(), Double.parseDouble(txtAmount2.getText()), grnid);
            try {
                int addPayment = MyPaymentController.addMyPayment(payment);
                if (addPayment > 0) {
                    System.out.println(AccountsController.addAccountChq(new Accounts(0, 2, getSelectedDate(), "", 2, "Withdraw(GRN)", -payment.getAmount())));
                    biz.project.cms.model.MyCheque cc = new MyCheque(txtChqNo3.getText(), getChqDate(), combo2.getSelectedItem().toString(), payment.getPaymentId());
                    int added = MyChequeController.addMyCheque(cc);
                    if (added > 0) {
                        JOptionPane.showMessageDialog(this, "Cheque successfully added !");
                        setPayments();
                    } else {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(this, "Cheque add fail!");
                    }
                } else {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Payment add fail!");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }//GEN-LAST:event_btnChqPay2ActionPerformed

    private void txtAmount2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmount2ActionPerformed
        if (!txtAmount2.getText().isEmpty()) {
            picDate.requestFocus();
        }
    }//GEN-LAST:event_txtAmount2ActionPerformed

    private void combo2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnChqPay2.doClick();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_combo2KeyPressed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed

    }//GEN-LAST:event_combo2ActionPerformed

    private void txtChqNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChqNo3ActionPerformed
        if (!txtChqNo3.getText().isEmpty()) {
            txtAmount2.requestFocus();
        }
    }//GEN-LAST:event_txtChqNo3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (!txtDue.getText().equals("0.0") && Double.parseDouble(txtDue.getText()) > 0) {
            if (!txtCash2.getText().isEmpty()) {
                MyPayment payment;
                double d = Double.parseDouble(txtDue.getText());
                if (Double.parseDouble(txtCash2.getText()) - d >= 0) {
                    payment = new MyPayment(grnid + "1ae1", getDate(), Double.parseDouble(txtDue.getText()), grnid);
                } else {
                    payment = new MyPayment(grnid + "2e11", getDate(), Double.parseDouble(txtCash2.getText()), grnid);
                }
                try {
                    int addPayment = MyPaymentController.addMyPayment(payment);
                    if (addPayment > 0) {
                        System.out.println(AccountsController.addAccount(new Accounts(0, 2, "", "", 2, "Withdraw(GRN)", -payment.getAmount())));
                        JOptionPane.showMessageDialog(this, "payment Added");
                        setPayments();
                    } else {
                        JOptionPane.showMessageDialog(this, "payment fail");
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    StringWriter sw = new StringWriter();
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                    ex.printStackTrace(new PrintWriter(sw));
                    String trace = sw.toString();
                    LoggerFileAcceess.exceptionLogger(trace);
                }
            } else {
                getToolkit().beep();
                txtCash2.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Total is already payed! You can not add payment to this GRN");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtCash2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCash2KeyTyped
        Validation.priceText(txtCash2);
        if (!txtCash2.getText().isEmpty()) {
            calcBalance();
        } else {
            txtBalance2.setText("");
        }
    }//GEN-LAST:event_txtCash2KeyTyped

    private void txtCash2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCash2KeyReleased
        Validation.priceText(txtCash2);
        if (!txtCash2.getText().isEmpty()) {
            calcBalance();
        } else {
            txtBalance2.setText("");
        }
    }//GEN-LAST:event_txtCash2KeyReleased

    private void txtCash2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCash2ActionPerformed
        jButton3.doClick();
    }//GEN-LAST:event_txtCash2ActionPerformed

    private void picDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picDateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!txtTtal.getText().isEmpty()) {
            printGRN(Double.parseDouble(txtTtal.getText()));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtAmount2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmount2KeyReleased
        Validation.priceText(txtAmount2);         // TODO add your handling code here:
    }//GEN-LAST:event_txtAmount2KeyReleased

    private void txtAmount2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmount2KeyTyped
        Validation.priceText(txtAmount2);        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmount2KeyTyped

    private void txtChqNo3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChqNo3KeyReleased
        Validation.limitesIntegers(txtChqNo3, 18);        // TODO add your handling code here:
    }//GEN-LAST:event_txtChqNo3KeyReleased

    private void txtChqNo3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChqNo3KeyTyped
        Validation.limitesIntegers(txtChqNo3, 18);            // TODO add your handling code here:
    }//GEN-LAST:event_txtChqNo3KeyTyped
    private void printGRN(Double valueOf) {
        HashMap<String, Object> map = new HashMap<>();
        JRTableModelDataSource dataSource = new JRTableModelDataSource(dtm);
        try {
            JasperReport compileReport = JasperCompileManager.compileReport(getClass()
                    .getResourceAsStream("../../../../../reports/GRN.jrxml"));
            map.put("INVOICE NO", txtGrnId2.getText());
            map.put("NAME", comboSupplier2.getSelectedItem().toString());
            map.put("NET TOTAL", valueOf);
            map.put("DISCOUNT", "--");
            map.put("GRAND TOTAL", "--");
            map.put("DATE", getSelectedDate());
            map.put("USER", HomeFrame.user.getUsername());
            JasperPrint fillReport = JasperFillManager.fillReport(compileReport, map, dataSource);
            JasperPrintManager.printReport(fillReport, false);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            StringWriter sw = new StringWriter();
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrnPayyments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrnPayyments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrnPayyments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrnPayyments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GrnPayyments dialog = new GrnPayyments(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChqPay2;
    private javax.swing.JComboBox combo2;
    private javax.swing.JComboBox<String> comboSupplier2;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblDate2;
    private javax.swing.JLabel lblGrnId2;
    private javax.swing.JLabel lblIfPay;
    private javax.swing.JLabel lblOrderID20;
    private javax.swing.JLabel lblOrderID21;
    private javax.swing.JLabel lblOrderID22;
    private javax.swing.JLabel lblOrderID23;
    private javax.swing.JLabel lblOrderID24;
    private javax.swing.JLabel lblOrderID26;
    private javax.swing.JLabel lblSupplier2;
    private javax.swing.JLabel lblSupplier3;
    private javax.swing.JLabel lblSupplier4;
    private javax.swing.JLabel lblSupplier5;
    private javax.swing.JList listPay;
    private javax.swing.JTabbedPane panelTab2;
    private org.jdesktop.swingx.JXDatePicker picDate;
    private org.jdesktop.swingx.JXDatePicker pickDate;
    private javax.swing.JTable tableGRN;
    private javax.swing.JTable tableItem;
    private javax.swing.JTextField txtAmount2;
    private javax.swing.JTextField txtBalance2;
    private javax.swing.JTextField txtCash2;
    private javax.swing.JTextField txtChqNo3;
    private javax.swing.JTextField txtDue;
    private javax.swing.JTextField txtGrnId2;
    private javax.swing.JTextField txtPayed;
    private javax.swing.JTextField txtTtal;
    // End of variables declaration//GEN-END:variables
private void setGRNTable() {
        try {
            ArrayList<GRN> allGRN = GrnController.getAllGRN();
            if (!allGRN.isEmpty()) {
                dtmGRN.setRowCount(0);
                for (GRN grn : allGRN) {
                    Supplier supplier = SupplierController.searchSupplierBYID(grn.getSupId());
                    if (supplier != null) {
                        Object[] o = {grn.getGrnId(), supplier.getCompany(), grn.getDate(), grn.getAmount()};
                        dtmGRN.addRow(o);
                    }
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            StringWriter sw = new StringWriter();
            JOptionPane.showMessageDialog(this, ex.getMessage());
            ex.printStackTrace(new PrintWriter(sw));
            String trace = sw.toString();
            LoggerFileAcceess.exceptionLogger(trace);
        }
    }

    private String getSelectedDate() {
        Date date = pickDate.getDate();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        String dormatDate = format.format(date);
        System.out.println(dormatDate);
        return dormatDate;
    }

    private String getDate() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat.format(date);
    }

    private boolean validateChqDay() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");

        Date date1 = picDate.getDate();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyyMMdd");

        return Integer.parseInt(dateFormat.format(date)) <= Integer.parseInt(dateFormat1.format(date1));
    }

    private String getChqDate() {
        Date date1 = picDate.getDate();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat1.format(date1);
    }

    private void fillComboSupplier() {
        try {
            ArrayList<Supplier> list = SupplierController.allSuppliers();
            if (!list.isEmpty()) {
                comboSupplier2.removeAllItems();
                comboSupplier2.addItem("All");
                for (Supplier supplier : list) {
                    comboSupplier2.addItem(supplier.getCompany());
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            ex.printStackTrace();
//            ex.printStackTrace(new PrintWriter(sw));
//            String trace = sw.toString();
//            LoggerFileAcceess.exceptionLogger(trace);
        }
    }

    private void calcBalance() {
        if (!txtDue.getText().isEmpty()) {
            double balance = Double.parseDouble(txtCash2.getText()) - Double.parseDouble(txtDue.getText());
            txtBalance2.setText(balance + "");
        } else {
            getToolkit().beep();
            txtCash2.setText("");
        }
    }

}
