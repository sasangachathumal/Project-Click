/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.order;

import biz.project.cms.controller.CustomerController;
import biz.project.cms.controller.AccountsController;
import biz.project.cms.controller.CustomerChequeController;
import biz.project.cms.controller.CustomerPaymentController;
import biz.project.cms.controller.OrderController;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.Accounts;
import biz.project.cms.model.Customer;
import biz.project.cms.model.CustomerCheque;
import biz.project.cms.model.CustomerPayment;
import biz.project.cms.model.Orders;
import biz.project.cms.other.IdGenerator;
import biz.project.cms.other.Validation;
import biz.project.cms.view.main.HomeFrame;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;

/**
 *
 * @author Vihanga
 */
public class AddOrderPayLater extends javax.swing.JDialog {

    private String cid;
    private boolean isPrint;
    private double cash;

    /**
     * Creates new form AddOrderPay
     */
    public AddOrderPayLater(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", Color.white);
        UI.put("Panel.background", Color.white);
        //
        isPrint = false;
        cash = 0.0;
        setLocationRelativeTo(parent);
        setTitle("Add Payment");
        txtCash.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        panelTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblOrderID = new javax.swing.JLabel();
        lblOrderID1 = new javax.swing.JLabel();
        txtTot = new javax.swing.JTextField();
        lblOrderID2 = new javax.swing.JLabel();
        txtCash = new javax.swing.JTextField();
        lblOrderID3 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        chkChq = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        lblOrderID4 = new javax.swing.JLabel();
        txtTot1 = new javax.swing.JTextField();
        txtChqNo = new javax.swing.JTextField();
        lblOrderID5 = new javax.swing.JLabel();
        lblOrderID6 = new javax.swing.JLabel();
        picDate = new org.jdesktop.swingx.JXDatePicker();
        lblOrderID7 = new javax.swing.JLabel();
        btnChqPay = new javax.swing.JButton();
        lblIfPay = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        txtAmount = new javax.swing.JTextField();
        lblOrderID8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        panelTab.setBackground(new java.awt.Color(255, 255, 255));
        panelTab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        panelTab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblOrderID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID.setText("Order ID");

        lblOrderID1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID1.setText("Total");

        txtTot.setEditable(false);
        txtTot.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTot.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTot.setCaretColor(new java.awt.Color(116, 7, 7));

        lblOrderID2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID2.setText("Cash");

        txtCash.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCash.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCash.setCaretColor(new java.awt.Color(116, 7, 7));
        txtCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashActionPerformed(evt);
            }
        });
        txtCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCashKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCashKeyTyped(evt);
            }
        });

        lblOrderID3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID3.setText("Balance");

        txtBalance.setEditable(false);
        txtBalance.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBalance.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtBalance.setCaretColor(new java.awt.Color(116, 7, 7));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Save & Print Invoice");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        chkChq.setBackground(new java.awt.Color(255, 255, 255));
        chkChq.setForeground(new java.awt.Color(51, 51, 51));
        chkChq.setText("Also add a cheque");
        chkChq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkChqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblOrderID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblOrderID2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCash, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblOrderID1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTot, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblOrderID3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkChq, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTot, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCash, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(chkChq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        panelTab.addTab("<html>C<br>A<br>S<br>H</html>", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblOrderID4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID4.setText("Total");

        txtTot1.setEditable(false);
        txtTot1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTot1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTot1.setCaretColor(new java.awt.Color(116, 7, 7));

        txtChqNo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtChqNo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtChqNo.setCaretColor(new java.awt.Color(116, 7, 7));
        txtChqNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChqNoActionPerformed(evt);
            }
        });
        txtChqNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChqNoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChqNoKeyTyped(evt);
            }
        });

        lblOrderID5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID5.setText("Chq. No.");

        lblOrderID6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID6.setText("Date");

        picDate.setBackground(new java.awt.Color(51, 51, 0));

        lblOrderID7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID7.setText("Bank");

        btnChqPay.setBackground(new java.awt.Color(255, 255, 255));
        btnChqPay.setText("Save & Print Invoice");
        btnChqPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChqPayActionPerformed(evt);
            }
        });

        lblIfPay.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblIfPay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sampath Bank", "Commercial Bank", "Nation's Trust Bank", "BOC", "People's Bank", "DFCC Bank", "Pan Asia Bank", "Seylan Bank", "Other" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        txtAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtAmount.setCaretColor(new java.awt.Color(116, 7, 7));
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        lblOrderID8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblOrderID8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOrderID8.setText("Amount");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrderID7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOrderID4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChqNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTot1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(picDate, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblIfPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnChqPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblIfPay, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderID4, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(txtTot1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChqNo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID5, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderID6, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(picDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrderID8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderID7, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChqPay)
                .addContainerGap())
        );

        panelTab.addTab("<html>C<br>H<br>E<br>Q<br>U<br>E</html>", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTab, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(panelTab, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashActionPerformed
        jButton1.doClick();
    }//GEN-LAST:event_txtCashActionPerformed

    private void txtCashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashKeyTyped
        Validation.priceText(txtCash);
        if (!txtCash.getText().isEmpty()) {
            calcBalance();
        } else {
            txtBalance.setText("");
        }
    }//GEN-LAST:event_txtCashKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!txtCash.getText().isEmpty()) {
            CustomerPayment customerPayment;
            try {
                if (Double.parseDouble(txtCash.getText()) - Double.parseDouble(txtTot.getText()) >= 0) {
                    customerPayment = new CustomerPayment(newPaymentID(), getDate(), Double.parseDouble(txtTot.getText()), cid);
                } else {
                    customerPayment = new CustomerPayment(newPaymentID(), getDate(), Double.parseDouble(txtCash.getText()), cid);
                }
                int addPayment = CustomerPaymentController.addPayment(customerPayment);
                if (addPayment > 0) {
                    System.out.println(AccountsController.addAccount(new Accounts(0, HomeFrame.user.getUid(), getDate(), getTime(), 2, "Add(Customer Order)", customerPayment.getAmount())));
                    JOptionPane.showMessageDialog(this, "Payment Added");
                    printInvoice(Double.parseDouble(txtCash.getText()), "CASH");
                    if (!chkChq.isSelected()) {
                        dispose();
                    } else {
                        cash = Double.valueOf(txtCash.getText());
                        lblIfPay.setText("Cash Pay - " + cash);
                        lblOrderID4.setText("Balance");
                        txtTot1.setText(txtBalance.getText());
                        panelTab.setSelectedIndex(1);
                    }
                } else {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "payment fail");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        } else {
            txtCash.requestFocus();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashKeyReleased
        Validation.priceText(txtCash);
        if (!txtCash.getText().isEmpty()) {
            calcBalance();
        } else {
            txtBalance.setText("");
        }
    }//GEN-LAST:event_txtCashKeyReleased

    private void btnChqPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChqPayActionPerformed
        if (txtChqNo.getText().isEmpty()) {
            getToolkit().beep();
            txtChqNo.requestFocus();
        } else if (!validateChqDay()) {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "System can only accept chaques dated to today or future !");
        } else if (txtAmount.getText().isEmpty()) {
            getToolkit().beep();
            txtAmount.requestFocus();
        } else {
            try {
                CustomerPayment payment = new CustomerPayment(newPaymentID(), getDate(), Double.parseDouble(txtAmount.getText()), cid);
                int addPayment = CustomerPaymentController.addPayment(payment);
                if (addPayment > 0) {
                    System.out.println(AccountsController.addAccountChq(new Accounts(0, HomeFrame.user.getUid(), getChqDate(), getTime(), 2, "Add(Customer Order)", payment.getAmount())));
                    biz.project.cms.model.CustomerCheque cc = new CustomerCheque(txtChqNo.getText(), getChqDate(), jComboBox1.getSelectedItem().toString(), payment.getId());
                    int added = CustomerChequeController.addCustomerCheque(cc);
                    if (added > 0) {
                        JOptionPane.showMessageDialog(this, "Cheque successfully added !");
                        printInvoice(Double.parseDouble(txtAmount.getText()), "CHEQUE");
                        dispose();
                    } else {
                        getToolkit().beep();
                        JOptionPane.showMessageDialog(this, "Cheque add fail!");
                    }
                } else {
                    getToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Payment add fail!");
                }
            } catch (ClassNotFoundException | SQLException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
    }//GEN-LAST:event_btnChqPayActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
//        if (!isPrint) {
////            printInvoice();
//        }
    }//GEN-LAST:event_formWindowClosed

    private void txtChqNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChqNoActionPerformed
        if (!txtChqNo.getText().isEmpty()) {
            picDate.requestFocus();
        }
    }//GEN-LAST:event_txtChqNoActionPerformed

    private void chkChqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkChqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkChqActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        if (!txtAmount.getText().isEmpty()) {
            jComboBox1.showPopup();
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_txtAmountActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnChqPay.doClick();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void txtChqNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChqNoKeyReleased
        Validation.limitesIntegers(txtChqNo, 18);         // TODO add your handling code here:
    }//GEN-LAST:event_txtChqNoKeyReleased

    private void txtChqNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChqNoKeyTyped
        Validation.limitesIntegers(txtChqNo, 18);         // TODO add your handling code here:
    }//GEN-LAST:event_txtChqNoKeyTyped

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased
        Validation.priceText(txtAmount);         // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountKeyReleased

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        Validation.priceText(txtAmount);          // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddOrderPayLater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddOrderPayLater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddOrderPayLater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddOrderPayLater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddOrderPayLater dialog = new AddOrderPayLater(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChqPay;
    private javax.swing.JCheckBox chkChq;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblIfPay;
    private javax.swing.JLabel lblOrderID;
    private javax.swing.JLabel lblOrderID1;
    private javax.swing.JLabel lblOrderID2;
    private javax.swing.JLabel lblOrderID3;
    private javax.swing.JLabel lblOrderID4;
    private javax.swing.JLabel lblOrderID5;
    private javax.swing.JLabel lblOrderID6;
    private javax.swing.JLabel lblOrderID7;
    private javax.swing.JLabel lblOrderID8;
    private javax.swing.JTabbedPane panelTab;
    private org.jdesktop.swingx.JXDatePicker picDate;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtChqNo;
    private javax.swing.JTextField txtTot;
    private javax.swing.JTextField txtTot1;
    // End of variables declaration//GEN-END:variables
 private String newPaymentID() throws SQLException, ClassNotFoundException {
        return IdGenerator.getNewId(4);
    }

    private void calcBalance() {
        double balance = Double.parseDouble(txtCash.getText()) - Double.parseDouble(txtTot.getText());
        txtBalance.setText(balance + "");
    }

    public void setCID(String id) {
        this.cid = id;
        lblOrderID.setText("Order ID - " + id);
    }

    public void setAmount(double amount) {
        txtTot.setText(amount + "");
        txtTot1.setText(amount + "");
    }

    private String getDate() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat.format(date);
    }

    private void printInvoice(Double pay, String t) {
        if (!isPrint) {
            HashMap<String, Object> map = new HashMap<>();
            try {
                double bal = Double.parseDouble(txtTot.getText()) - pay;
                Orders o = OrderController.searchOrderByOrderid(cid);
                Customer c = CustomerController.searchCustomerByID(o.getCusId());
                String type = "RETAIL";
                if (o.getStatus() == 0) {
                    type = "WHOLESALE";
                }
                JasperReport compileReport = JasperCompileManager.compileReport(getClass()
                        .getResourceAsStream("../../../../../reports/Invoice_1.jrxml"));

                map.put("INVOICE NO", cid);
                map.put("NAME", c.getName());
                map.put("TELEPHONE", c.getContact() + "");
                map.put("TYPE1", type);
                map.put("TOT", o.getAmount() + "");
                map.put("DATE", o.getDate());
                map.put("TIME", o.getTime());
                map.put("AMOUNT", pay + "");
                map.put("BALANCE", bal);
                map.put("TYPE", t);
                map.put("DUE", txtTot.getText());
                map.put("USER", HomeFrame.user.getUsername());
                isPrint = true;
                JasperPrint fillReport = JasperFillManager.fillReport(compileReport, map);
                //JasperViewer.viewReport(fillReport, false);
                JasperPrintManager.printReport(fillReport, false);
            } catch (ClassNotFoundException | SQLException | JRException ex) {
                StringWriter sw = new StringWriter();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                ex.printStackTrace(new PrintWriter(sw));
                String trace = sw.toString();
                LoggerFileAcceess.exceptionLogger(trace);
            }
        }
        isPrint = true;
    }

    private boolean validateChqDay() {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");

        Date date1 = picDate.getDate();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyyMMdd");

        return Integer.parseInt(dateFormat.format(date)) <= Integer.parseInt(dateFormat1.format(date1));
    }

    private String getChqDate() {
        Date date1 = picDate.getDate();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
        return dateFormat1.format(date1);
    }

    private String getTime() {
        Date date1 = new Date();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("HH:mm");
        return dateFormat1.format(date1);
    }
}
