/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.project.cms.view.main;

import biz.project.cms.controller.UserController;
import biz.project.cms.fileaccess.LoggerFileAcceess;
import biz.project.cms.model.User;
import biz.project.cms.other.DBbackup;
import biz.project.cms.view.other.Hi;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Harsh
 */
public class LoginFrame extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/image/Home/Logo Company.png")).getImage());
        //
        UIManager UI = new UIManager();
        UI.put("OptionPane.background", Color.white);
        UI.put("Panel.background", Color.white);
        //
        setBackground(new Color(0, 0, 0, 0));
        setLocationRelativeTo(null);
        userNameTextField.requestFocus();
        setTitle("Click Login");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRestore = new javax.swing.JButton();
        userNameTextField = new javax.swing.JTextField();
        passwordPasswordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        moveLabel = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.0F);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRestore.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        btnRestore.setForeground(new java.awt.Color(204, 204, 255));
        btnRestore.setText("Restore");
        btnRestore.setBorderPainted(false);
        btnRestore.setContentAreaFilled(false);
        btnRestore.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRestore.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refresh.png"))); // NOI18N
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });
        getContentPane().add(btnRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 100, -1));

        userNameTextField.setBackground(new java.awt.Color(102, 102, 102));
        userNameTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        userNameTextField.setForeground(new java.awt.Color(0, 0, 51));
        userNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userNameTextField.setCaretColor(new java.awt.Color(0, 153, 255));
        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(userNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 380, 40));

        passwordPasswordField.setBackground(new java.awt.Color(102, 102, 102));
        passwordPasswordField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        passwordPasswordField.setForeground(new java.awt.Color(0, 0, 51));
        passwordPasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordPasswordField.setCaretColor(new java.awt.Color(0, 153, 255));
        passwordPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordPasswordFieldActionPerformed(evt);
            }
        });
        getContentPane().add(passwordPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 380, 40));

        loginButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button/LoginButton 1.png"))); // NOI18N
        loginButton.setContentAreaFilled(false);
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button/LoginButton 2.png"))); // NOI18N
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        getContentPane().add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 100, 40));

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button/ExitButton 1.png"))); // NOI18N
        exitButton.setContentAreaFilled(false);
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button/ExitButton 2.png"))); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 220, 100, 40));

        moveLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                moveLabelMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                moveLabelMouseMoved(evt);
            }
        });
        getContentPane().add(moveLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 600, 280));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/FrameLogin.png"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        closeFadeOut();
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed
        passwordPasswordField.requestFocus();
    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        serchUser();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void moveLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveLabelMouseMoved
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_moveLabelMouseMoved

    private void moveLabelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveLabelMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse - 180, y - yMouse - 10);
    }//GEN-LAST:event_moveLabelMouseDragged

    private void passwordPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordPasswordFieldActionPerformed
        loginButton.doClick();
    }//GEN-LAST:event_passwordPasswordFieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {
            String val = i + "F";
            float f = Float.valueOf(val);
            setOpacity(f);
            try {
                Thread.sleep(29);
            } catch (InterruptedException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeFadeOut();
    }//GEN-LAST:event_formWindowClosing

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed
        String pw = JOptionPane.showInputDialog(this, "Enter Password", "Authentication", 1);
        if (pw.equals("click148")) {
            restore();
        } else {
            getToolkit().beep();
            JOptionPane.showMessageDialog(this, "Authentication Fail !", "Error", 0);
        }
        
    }//GEN-LAST:event_btnRestoreActionPerformed

    private void closeFadeOut() throws NumberFormatException {
        for (double i = 1.0; i >= 0.0; i = i - 0.1) {
            String val = i + "F";
            float f = Float.valueOf(val);
            setOpacity(f);
            try {
                Thread.sleep(25);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel moveLabel;
    private javax.swing.JPasswordField passwordPasswordField;
    private javax.swing.JTextField userNameTextField;
    // End of variables declaration//GEN-END:variables

    private void serchUser() {
        if (!userNameTextField.getText().isEmpty() && !passwordPasswordField.getText().isEmpty()) {
            try {
                User user = UserController.searchUserByUserName(userNameTextField.getText());
                if (user != null) {
                    if (passwordPasswordField.getText().equals(user.getPassword())) {
                        closeFadeOut();
                        Hi hi = new Hi();
                        hi.setUser(user);
                        hi.setVisible(true);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Incorrect username or password !");
                        passwordPasswordField.setText("");
                        userNameTextField.requestFocus();
                        userNameTextField.selectAll();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Incorrect username or password !");
                    passwordPasswordField.setText("");
                    userNameTextField.requestFocus();
                    userNameTextField.selectAll();
                }

            } catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter username and password");
            passwordPasswordField.setText("");
            userNameTextField.requestFocus();
            userNameTextField.selectAll();
        }

    }

    

    private void restore() {
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(this);
            File file = chooser.getSelectedFile();
            String path = file.getAbsolutePath();
            int res;
            if (path != null) {
                try {
                    res = DBbackup.restoreBackup(path);
                    if (res == 0) {
                        JOptionPane.showMessageDialog(this, "Successfully restored your backup data...!", "Information", 1);
                    } else {
                        JOptionPane.showMessageDialog(this, "Fail to restore data.\nYour backup file is currupted !", "Information", 0);
                    }
                } catch (IOException | InterruptedException | HeadlessException ex) {
                    StringWriter sw = new StringWriter();
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                    ex.printStackTrace(new PrintWriter(sw));
                    String trace = sw.toString();
                    LoggerFileAcceess.exceptionLogger(trace);
                } catch (NullPointerException e) {
                }
            } else {
                JOptionPane.showMessageDialog(this, "No file was Selected.");
            }
        } catch (NullPointerException nullPointerException) {
        }
    }
}
